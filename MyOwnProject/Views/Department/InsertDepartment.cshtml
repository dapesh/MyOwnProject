@model Department


<h1>Add New Department</h1>

@{
    var companyList = ViewBag.CompantList as List<Company>;
}
@if(companyList == null)
{
    @using (Html.BeginForm("InsertDepartment", "Department", FormMethod.Post))
    {
        @Html.HiddenFor(x=>x.CompanyId)
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName)
            @Html.TextBoxFor(model=>model.DepartmentName, new{@class="form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentAddress)
            @Html.TextBoxFor(model => model.DepartmentAddress, new { @class = "form-control" })
        </div>
        <div class="form-group">
        </div>
        <input type="submit" value="InsertDepartment" class="btn btn-primary" />
    }

}
else
{
    @using (Html.BeginForm("InsertDepartment", "Department", FormMethod.Post))
    {
        @Html.DropDownList("CompanyId", new SelectList(companyList, "CompanyId", "CompanyName"), "Select Company")
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentName)
            @Html.TextBoxFor(model=>model.DepartmentName, new{@class="form-control"})
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentAddress)
            @Html.TextBoxFor(model => model.DepartmentAddress, new { @class = "form-control" })
        </div>
        <div class="form-group">
        </div>
        <input type="submit" value="InsertDepartment" class="btn btn-primary" />
    }
    @using (Html.BeginForm("InsertDepartment", "Department", FormMethod.Post))
    {
        @*@Html.HiddenFor(x=>x.CompanyId)*@
        
    }
}

